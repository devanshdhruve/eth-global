/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  MockHTSToken,
  MockHTSTokenInterface,
} from "../../contracts/MockHTSToken";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "int64",
        name: "value",
        type: "int64",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "int64",
        name: "amount",
        type: "int64",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "int32",
        name: "",
        type: "int32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "int64",
        name: "amount",
        type: "int64",
      },
    ],
    name: "transferToken",
    outputs: [
      {
        internalType: "int32",
        name: "",
        type: "int32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052346100cb57600061001581546100d0565b601f81116100a1575b50601c6d26b7b1b59020a9a4902a37b5b2b760911b0181556001906100446001546100d0565b90601f8211610077575b60066241534960e81b016001556002805460ff19166008179055604051610528908161010b8239f35b60018152601f60208220920160051c8201915b828110610097575061004e565b818155830161008a565b818052601f60208320910160051c8101905b8181106100c0575061001e565b8281556001016100b3565b600080fd5b90600182811c92168015610100575b60208310146100ea57565b634e487b7160e01b600052602260045260246000fd5b91607f16916100df56fe60806040818152600436101561001457600080fd5b600090813560e01c92836306fdde031461022f57508263313ce5671461020f57826340c10f19146101d35782634c76dd491461007157826370a082311461019d57826395d89b411461007657505063eca369171461007157600080fd5b61036d565b346101995781600319360112610199578051908260018054908160011c906001831692831561018f575b602093848410811461017b5783885290811561015f5750600114610109575b505050829003601f01601f191682019267ffffffffffffffff8411838510176100f557508291826100f1925282610309565b0390f35b634e487b7160e01b81526041600452602490fd5b600187529192508591837fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf65b83851061014b57505050508301018480806100bf565b805488860183015293019284908201610135565b60ff1916878501525050151560051b84010190508480806100bf565b634e487b7160e01b89526022600452602489fd5b91607f16916100a0565b5080fd5b346101995760203660031901126101995760209181906001600160a01b036101c3610352565b1681526003845220549051908152f35b346101995780600319360112610199576001600160a01b036101f3610352565b1682526003602052812061020a60243582546104cf565b905580f35b3461019957816003193601126101995760209060ff600254169051908152f35b903461030557826003193601126103055782835460018160011c90600183169283156102fb575b602093848410811461017b5783885290811561015f57506001146102a657505050829003601f01601f191682019267ffffffffffffffff8411838510176100f557508291826100f1925282610309565b8680529192508591837f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5635b8385106102e757505050508301018480806100bf565b8054888601830152930192849082016102d1565b91607f1691610256565b8280fd5b6020808252825181830181905290939260005b82811061033e57505060409293506000838284010152601f8019910116010190565b81810186015184820160400152850161031c565b600435906001600160a01b038216820361036857565b600080fd5b34610368576080366003190112610368576001600160a01b0360043581811690819003610368576024359180831680930361036857604435908116809103610368576064358060070b9283820361036857300361049a5767ffffffffffffffff16926000928184526020946003865260409481868220541061045f578381526003875285812080549083820391821161044b57877fcef55929759435389feb62e3ad30d90911d061d3eb8f8e3ead60622531745cc195938a959361043c935588815260038652209182546104cf565b90558551908152a35160168152f35b634e487b7160e01b83526011600452602483fd5b855162461bcd60e51b8152600481018890526014602482015273496e73756666696369656e742062616c616e636560601b6044820152606490fd5b60405162461bcd60e51b815260206004820152600d60248201526c24b73b30b634b2103a37b5b2b760991b6044820152606490fd5b919082018092116104dc57565b634e487b7160e01b600052601160045260246000fdfea264697066735822122041ffb353d336949a104f46db8bf9289a8d22bb8bbcd0493a9635af818b6f499c64736f6c63430008180033";

type MockHTSTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockHTSTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockHTSToken__factory extends ContractFactory {
  constructor(...args: MockHTSTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      MockHTSToken & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MockHTSToken__factory {
    return super.connect(runner) as MockHTSToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockHTSTokenInterface {
    return new Interface(_abi) as MockHTSTokenInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): MockHTSToken {
    return new Contract(address, _abi, runner) as unknown as MockHTSToken;
  }
}
