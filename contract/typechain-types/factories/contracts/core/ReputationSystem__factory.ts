/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  ReputationSystem,
  ReputationSystemInterface,
} from "../../../contracts/core/ReputationSystem";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newScore",
        type: "uint256",
      },
    ],
    name: "ReputationUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "domain",
        type: "string",
      },
    ],
    name: "TaskCompleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "TaskRejected",
    type: "event",
  },
  {
    inputs: [],
    name: "agent",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "awardReputation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "domainScores",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "string",
        name: "domain",
        type: "string",
      },
    ],
    name: "getDomainScore",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getReputation",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getSuccessRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "marketplace",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "minimum",
        type: "uint256",
      },
    ],
    name: "meetsMinimum",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "profiles",
    outputs: [
      {
        internalType: "uint256",
        name: "reputationScore",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tasksCompleted",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tasksRejected",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastUpdate",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "string",
        name: "domain",
        type: "string",
      },
    ],
    name: "recordTaskApproved",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "recordTaskRejected",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_agent",
        type: "address",
      },
    ],
    name: "setAgent",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_marketplace",
        type: "address",
      },
    ],
    name: "setMarketplace",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523461007a5733156100645760008054336001600160a01b03198216811783556040519290916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a3610b6090816100808239f35b631e4fbdf760e01b815260006004820152602490fd5b600080fdfe608060408181526004918236101561001657600080fd5b600092833560e01c9182633f343d6314610715575081634d64f937146106575781634f0930961461061b578163715018a6146105c157816373ad6c2d1461056d5781638da5cb5b1461054557816396549436146104205781639c89a0e2146103e8578163abc8c7af146103bf578163bbe1562714610365578163bcf685ed1461031c578163c9b540ee146101fc578163cb510373146101cf578163f2fde38b14610148578163f5ff5c761461011c575063fc9cdc83146100d557600080fd5b346101185780602080936100e83661081f565b6001600160a01b039092168352600284529390912084519384929081908437820190815203019020549051908152f35b5080fd5b9050346101445782600319360112610144575490516001600160a01b03909116815260209150f35b8280fd5b90503461014457602036600319011261014457610163610804565b9061016c610a8a565b6001600160a01b039182169283156101b957505082546001600160a01b0319811683178455167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b51631e4fbdf760e01b8152908101849052602490fd5b505034610118576020366003190112610118576020906101f56101f0610804565b610980565b9051908152f35b8383346101185761020c3661081f565b9260018060a09493941b0361022581885416331461087c565b8216936102338515156108b5565b84865260209360018552828720936001850161024f81546108f0565b90554260038601558688526002865283882086855180928686833786820190815203019020805490600a8201809211610309579488936102d77fb3326ae9212eadbf18aaa1299fd17d8f94b1ecad056ff428c457ed17f1093028948397947ffc577563f1b9a0461e24abef1e1fcc0d33d3d881f20b5df6dda59de4aae2c8219b9a99556109d4565b8097558282519384928a8452818b8501528484013781810183018c9052601f01601f19168101030190a251908152a280f35b634e487b7160e01b8a5260118b5260248afd5b83903461011857602036600319011261011857610337610804565b61033f610a8a565b6001600160a01b0316610353811515610915565b81546001600160a01b03191617905580f35b5050346101185760203660031901126101185760809181906001600160a01b0361038d610804565b168152600160205220908154916001810154916003600283015492015492815194855260208501528301526060820152f35b50503461011857816003193601126101185760035490516001600160a01b039091168152602090f35b5050346101185760203660031901126101185760209181906001600160a01b03610410610804565b1681526001845220549051908152f35b9190503461014457806003193601126101445761043b610804565b600354602435916001600160a01b03918216330361050f5716926104608415156108b5565b81156104cc57507ffc577563f1b9a0461e24abef1e1fcc0d33d3d881f20b5df6dda59de4aae2c82191602091848652600183526104a1828720918254610953565b9055838552600182528085206103e8808254116104c4575b50549051908152a280f35b8155386104b9565b606490602084519162461bcd60e51b8352820152601760248201527f416d6f756e74206d75737420626520706f7369746976650000000000000000006044820152fd5b835162461bcd60e51b8152602081870152601060248201526f4f6e6c79206d61726b6574706c61636560801b6044820152606490fd5b505034610118578160031936011261011857905490516001600160a01b039091168152602090f35b83346105be5760203660031901126105be57610587610804565b61058f610a8a565b6001600160a01b03166105a3811515610915565b6bffffffffffffffffffffffff60a01b600354161760035580f35b80fd5b83346105be57806003193601126105be576105da610a8a565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b5050346101185780600319360112610118576020916001600160a01b03610640610804565b168152600183528160243591205410159051908152f35b9050346101445760203660031901126101445760207ffc577563f1b9a0461e24abef1e1fcc0d33d3d881f20b5df6dda59de4aae2c82191610696610804565b90546001600160a01b03906106ae908216331461087c565b8116936106bc8515156108b5565b848652600183526106e581872092600284016106d881546108f0565b90554260038501556109d4565b8092555190847f9600bf078875ee36131d4b0f0a3d6f9a8f1c0ad5ac1c76fcd9fefd488b2e31748780a28152a280f35b915092346105be57826003193601126105be57610730610804565b6024359467ffffffffffffffff8087116107ed57366023880112156107ed5786820135918183116107f157601f8301601f19908116603f01168601918211868310176107f15750855280845260209536602483830101116107ed5792868282969493602483970183870137840101526001600160a01b031683526002825283832084518251909485939085905b8381106107d857505050820190815203019020549051908152f35b828101820151888201528795508691016107bd565b8380fd5b634e487b7160e01b855260419052602484fd5b600435906001600160a01b038216820361081a57565b600080fd5b604060031982011261081a576004356001600160a01b038116810361081a579160243567ffffffffffffffff9283821161081a578060238301121561081a57816004013593841161081a576024848301011161081a576024019190565b1561088357565b60405162461bcd60e51b815260206004820152600a60248201526913db9b1e481859d95b9d60b21b6044820152606490fd5b156108bc57565b60405162461bcd60e51b815260206004820152600c60248201526b24b73b30b634b2103ab9b2b960a11b6044820152606490fd5b60001981146108ff5760010190565b634e487b7160e01b600052601160045260246000fd5b1561091c57565b60405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964206164647265737360881b6044820152606490fd5b919082018092116108ff57565b811561096a570490565b634e487b7160e01b600052601260045260246000fd5b60018060a01b0316600052600160205260406000206109a86002600183015492015482610953565b80156109cd576064820291808304606414901517156108ff576109ca91610960565b90565b5050600090565b60009060018060a01b031681526001602052604081206109fd6002600183015492015482610953565b908115610a8557606481029080820460641490151715610a7157610a2482610a2a92610960565b91610ab6565b908060031b9080820460081490151715610a71578160011b9180830460021490151715610a715790610a5b91610953565b6103e8915081811115610a6c575090565b905090565b634e487b7160e01b83526011600452602483fd5b505090565b6000546001600160a01b03163303610a9e57565b60405163118cdaa760e01b8152336004820152602490fd5b8015610b24576064811015610b1e576032811015610b0157600a811015610ae857600581029081046005036108ff5790565b806009198101116108ff57602801806032116108ff5790565b60311981019081116108ff5760011c605001806050116108ff5790565b50606490565b5060009056fea264697066735822122050aaaf073e7bafa7607e066e119f4717ca3821e9222513c1e1ac7517111f586d64736f6c63430008180033";

type ReputationSystemConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ReputationSystemConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ReputationSystem__factory extends ContractFactory {
  constructor(...args: ReputationSystemConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      ReputationSystem & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ReputationSystem__factory {
    return super.connect(runner) as ReputationSystem__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ReputationSystemInterface {
    return new Interface(_abi) as ReputationSystemInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ReputationSystem {
    return new Contract(address, _abi, runner) as unknown as ReputationSystem;
  }
}
