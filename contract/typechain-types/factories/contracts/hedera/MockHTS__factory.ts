/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  MockHTS,
  MockHTSInterface,
} from "../../../contracts/hedera/MockHTS";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "int64",
        name: "amount",
        type: "int64",
      },
    ],
    name: "MockTransfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "int32",
        name: "",
        type: "int32",
      },
      {
        internalType: "int64",
        name: "",
        type: "int64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balances",
    outputs: [
      {
        internalType: "int64",
        name: "",
        type: "int64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getBalance",
    outputs: [
      {
        internalType: "int64",
        name: "",
        type: "int64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "int64",
        name: "amount",
        type: "int64",
      },
    ],
    name: "setBalance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "int64",
        name: "amount",
        type: "int64",
      },
    ],
    name: "transferToken",
    outputs: [
      {
        internalType: "int32",
        name: "",
        type: "int32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061053f806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063b3b549d91461005c578063c23f001f146100b4578063d4fac45d146100f7578063eca369171461010a578063f7888aec14610130575b600080fd5b6100b261006a3660046103cb565b6001600160a01b0392831660009081526020818152604080832094909516825292909252919020805467ffffffffffffffff191667ffffffffffffffff909216919091179055565b005b6100df6100c236600461040e565b600060208181529281526040808220909352908152205460070b81565b60405160079190910b81526020015b60405180910390f35b6100df61010536600461040e565b61018c565b61011d610118366004610441565b6101ba565b60405160039190910b81526020016100ee565b61016f61013e36600461040e565b6001600160a01b038083166000908152602081815260408083209385168352929052205460169060070b9250929050565b6040805160039390930b835260079190910b6020830152016100ee565b6001600160a01b038083166000908152602081815260408083209385168352929052205460070b5b92915050565b6000808260070b136102135760405162461bcd60e51b815260206004820152601760248201527f416d6f756e74206d75737420626520706f73697469766500000000000000000060448201526064015b60405180910390fd5b6001600160a01b0380861660009081526020818152604080832093881683529290522054600783810b91900b12156102845760405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742062616c616e636560601b604482015260640161020a565b6001600160a01b03808616600090815260208181526040808320938816835292905290812080548492906102bc90849060070b6104ab565b825467ffffffffffffffff9182166101009390930a9283029190920219909116179055506001600160a01b038086166000908152602081815260408083209387168352929052908120805484929061031890849060070b6104da565b82546101009290920a67ffffffffffffffff81810219909316919092169190910217905550604080516001600160a01b0387811682528681166020830152851681830152600784900b606082015290517ff53f9b7180e8d832a5985b634ce06a38735ffe3acc64a2c397c08e9a566f312c9181900360800190a1506016949350505050565b80356001600160a01b03811681146103b457600080fd5b919050565b8035600781900b81146103b457600080fd5b6000806000606084860312156103e057600080fd5b6103e98461039d565b92506103f76020850161039d565b9150610405604085016103b9565b90509250925092565b6000806040838503121561042157600080fd5b61042a8361039d565b91506104386020840161039d565b90509250929050565b6000806000806080858703121561045757600080fd5b6104608561039d565b935061046e6020860161039d565b925061047c6040860161039d565b915061048a606086016103b9565b905092959194509250565b634e487b7160e01b600052601160045260246000fd5b600782810b9082900b03677fffffffffffffff198112677fffffffffffffff821317156101b4576101b4610495565b600781810b9083900b01677fffffffffffffff8113677fffffffffffffff19821217156101b4576101b461049556fea26469706673582212208c4c37012b58077d7205104e9e248bc9c2408e2d9bc402b59de0476590d8029764736f6c63430008180033";

type MockHTSConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockHTSConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockHTS__factory extends ContractFactory {
  constructor(...args: MockHTSConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      MockHTS & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MockHTS__factory {
    return super.connect(runner) as MockHTS__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockHTSInterface {
    return new Interface(_abi) as MockHTSInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): MockHTS {
    return new Contract(address, _abi, runner) as unknown as MockHTS;
  }
}
